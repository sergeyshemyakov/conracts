{"abi":[{"type":"function","name":"relayBatchEntry","inputs":[{"name":"_target","type":"address","internalType":"address"},{"name":"_prevMsgHash","type":"bytes32","internalType":"bytes32"},{"name":"_message","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sendBatchEntry","inputs":[{"name":"_chainId","type":"uint256","internalType":"uint256"},{"name":"_target","type":"address","internalType":"address"},{"name":"_prevMsgHash","type":"bytes32","internalType":"bytes32"},{"name":"_message","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"msgHash_","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"event","name":"FailedRelayedBatchEntry","inputs":[{"name":"source","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"prevMsgHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"message","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"RelayedBatchEntry","inputs":[{"name":"source","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"prevMsgHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"message","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"SentBatchEntry","inputs":[{"name":"destination","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"target","type":"address","indexed":true,"internalType":"address"},{"name":"prevMsgHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"message","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"error","name":"BatchDependencyNotRelayed","inputs":[]},{"type":"error","name":"InvalidCrossDomainSender","inputs":[]},{"type":"error","name":"MessageDestinationSameChain","inputs":[]},{"type":"error","name":"MessageTargetCrossChainBatcher","inputs":[]},{"type":"error","name":"MessageTargetCrossL2Inbox","inputs":[]},{"type":"error","name":"MessageTargetL2ToL2CrossDomainMessenger","inputs":[]},{"type":"error","name":"Unauthorized","inputs":[]}],"bytecode":{"object":"0x6080604052348015600f57600080fd5b506107868061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637cf59e251461003b578063d06b450314610060575b600080fd5b61004e610049366004610558565b610075565b60405190815260200160405180910390f35b61007361006e3660046105c2565b61023b565b005b600046860361009757604051638ed9a95d60e01b815260040160405180910390fd5b6021602160991b01196001600160a01b038616016100c857604051635482058960e11b815260040160405180910390fd5b6022602160991b01196001600160a01b038616016100f957604051634faa250960e01b815260040160405180910390fd5b306001600160a01b03861603610122576040516321b0b14160e21b815260040160405180910390fd5b6000306001600160a01b031663d06b45038787878760405160240161014a9493929190610647565b60408051601f198184030181529181526020820180516001600160e01b031660e09490941b939093179092529051637056f41f60e01b81529092506023602160991b019150637056f41f906101a7908a9030908690600401610679565b6020604051808303816000875af11580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea91906106dd565b915084866001600160a01b0316887fa466464f814de7a06f29007a7de8c62b17d892213f31a4a30cf2b909e45c117f87876040516102299291906106f6565b60405180910390a45095945050505050565b336023602160991b0114610261576040516282b42960e81b815260040160405180910390fd5b306001600160a01b03166023602160991b016001600160a01b03166338ffde186040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d4919061070a565b6001600160a01b0316146102fb57604051635e11715560e11b815260040160405180910390fd5b821580159061036e575060405163b1b1b20960e01b8152600481018490526023602160991b019063b1b1b20990602401602060405180830381865afa158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c919061072e565b155b1561038c57604051634f58cc2760e01b815260040160405180910390fd5b60006103d085600085858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104c992505050565b905060006023602160991b016001600160a01b031663247944626040518163ffffffff1660e01b8152600401602060405180830381865afa158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d91906106dd565b905081156104855784817fbac9908444387efe5d7bc0b26c055e668701474b326bc6816c36bf766b436a4586866040516104789291906106f6565b60405180910390a36104c1565b84817fda8f9ac81722f30df36693a2453dd3cf4cca7055457e810d8ac13f8e36bb081886866040516104b89291906106f6565b60405180910390a35b505050505050565b60006104d7845a85856104df565b949350505050565b6000806000835160208501868989f195945050505050565b6001600160a01b038116811461050c57600080fd5b50565b60008083601f84011261052157600080fd5b50813567ffffffffffffffff81111561053957600080fd5b60208301915083602082850101111561055157600080fd5b9250929050565b60008060008060006080868803121561057057600080fd5b853594506020860135610582816104f7565b935060408601359250606086013567ffffffffffffffff8111156105a557600080fd5b6105b18882890161050f565b969995985093965092949392505050565b600080600080606085870312156105d857600080fd5b84356105e3816104f7565b935060208501359250604085013567ffffffffffffffff81111561060657600080fd5b6106128782880161050f565b95989497509550505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b038516815283602082015260606040820152600061066f60608301848661061e565b9695505050505050565b83815260018060a01b0383166020820152606060408201526000825180606084015260005b818110156106bb576020818601810151608086840101520161069e565b506000608082850101526080601f19601f830116840101915050949350505050565b6000602082840312156106ef57600080fd5b5051919050565b6020815260006104d760208301848661061e565b60006020828403121561071c57600080fd5b8151610727816104f7565b9392505050565b60006020828403121561074057600080fd5b8151801515811461072757600080fdfea26469706673582212204184bc15fc51de4132b73987940f1e37b2f629b241b6c91744391167dd2d8bb564736f6c634300081a0033","sourceMap":"903:5535:6:-:0;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100365760003560e01c80637cf59e251461003b578063d06b450314610060575b600080fd5b61004e610049366004610558565b610075565b60405190815260200160405180910390f35b61007361006e3660046105c2565b61023b565b005b600046860361009757604051638ed9a95d60e01b815260040160405180910390fd5b6021602160991b01196001600160a01b038616016100c857604051635482058960e11b815260040160405180910390fd5b6022602160991b01196001600160a01b038616016100f957604051634faa250960e01b815260040160405180910390fd5b306001600160a01b03861603610122576040516321b0b14160e21b815260040160405180910390fd5b6000306001600160a01b031663d06b45038787878760405160240161014a9493929190610647565b60408051601f198184030181529181526020820180516001600160e01b031660e09490941b939093179092529051637056f41f60e01b81529092506023602160991b019150637056f41f906101a7908a9030908690600401610679565b6020604051808303816000875af11580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea91906106dd565b915084866001600160a01b0316887fa466464f814de7a06f29007a7de8c62b17d892213f31a4a30cf2b909e45c117f87876040516102299291906106f6565b60405180910390a45095945050505050565b336023602160991b0114610261576040516282b42960e81b815260040160405180910390fd5b306001600160a01b03166023602160991b016001600160a01b03166338ffde186040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d4919061070a565b6001600160a01b0316146102fb57604051635e11715560e11b815260040160405180910390fd5b821580159061036e575060405163b1b1b20960e01b8152600481018490526023602160991b019063b1b1b20990602401602060405180830381865afa158015610348573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036c919061072e565b155b1561038c57604051634f58cc2760e01b815260040160405180910390fd5b60006103d085600085858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104c992505050565b905060006023602160991b016001600160a01b031663247944626040518163ffffffff1660e01b8152600401602060405180830381865afa158015610419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043d91906106dd565b905081156104855784817fbac9908444387efe5d7bc0b26c055e668701474b326bc6816c36bf766b436a4586866040516104789291906106f6565b60405180910390a36104c1565b84817fda8f9ac81722f30df36693a2453dd3cf4cca7055457e810d8ac13f8e36bb081886866040516104b89291906106f6565b60405180910390a35b505050505050565b60006104d7845a85856104df565b949350505050565b6000806000835160208501868989f195945050505050565b6001600160a01b038116811461050c57600080fd5b50565b60008083601f84011261052157600080fd5b50813567ffffffffffffffff81111561053957600080fd5b60208301915083602082850101111561055157600080fd5b9250929050565b60008060008060006080868803121561057057600080fd5b853594506020860135610582816104f7565b935060408601359250606086013567ffffffffffffffff8111156105a557600080fd5b6105b18882890161050f565b969995985093965092949392505050565b600080600080606085870312156105d857600080fd5b84356105e3816104f7565b935060208501359250604085013567ffffffffffffffff81111561060657600080fd5b6106128782880161050f565b95989497509550505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b038516815283602082015260606040820152600061066f60608301848661061e565b9695505050505050565b83815260018060a01b0383166020820152606060408201526000825180606084015260005b818110156106bb576020818601810151608086840101520161069e565b506000608082850101526080601f19601f830116840101915050949350505050565b6000602082840312156106ef57600080fd5b5051919050565b6020815260006104d760208301848661061e565b60006020828403121561071c57600080fd5b8151610727816104f7565b9392505050565b60006020828403121561074057600080fd5b8151801515811461072757600080fdfea26469706673582212204184bc15fc51de4132b73987940f1e37b2f629b241b6c91744391167dd2d8bb564736f6c634300081a0033","sourceMap":"903:5535:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4353:853;;;;;;:::i;:::-;;:::i;:::-;;;1386:25:7;;;1374:2;1359:18;4353:853:6;;;;;;;5727:709;;;;;;:::i;:::-;;:::i;:::-;;4353:853;4493:16;4608:13;4596:8;:25;4592:67;;4630:29;;-1:-1:-1;;;4630:29:6;;;;;;;;;;;4592:67;-1:-1:-1;;;;;;;;;;;4673:36:6;;;4669:76;;4718:27;;-1:-1:-1;;;4718:27:6;;;;;;;;;;;4669:76;-1:-1:-1;;;;;;;;;;;4759:53:6;;;4755:107;;4821:41;;-1:-1:-1;;;4821:41:6;;;;;;;;;;;4755:107;4895:4;-1:-1:-1;;;;;4876:24:6;;;4872:69;;4909:32;;-1:-1:-1;;;4909:32:6;;;;;;;;;;;4872:69;4952:22;4992:4;-1:-1:-1;;;;;4992:20:6;;5015:7;5024:12;5038:8;;4977:71;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4977:71:6;;;;;;;;;;;;;;-1:-1:-1;;;;;4977:71:6;;;;;;;;;;;;;5069:57;;-1:-1:-1;;;5069:57:6;;4977:71;;-1:-1:-1;;;;;;4715:42:2;-1:-1:-1;5069:21:6;;:57;;5091:8;;5109:4;;4977:71;;5069:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5058:68;;5176:12;5167:7;-1:-1:-1;;;;;5142:57:6;5157:8;5142:57;5190:8;;5142:57;;;;;;;:::i;:::-;;;;;;;;4515:691;4353:853;;;;;;;:::o;5727:709::-;5839:10;-1:-1:-1;;;;;5839:32:6;5835:59;;5880:14;;-1:-1:-1;;;5880:14:6;;;;;;;;;;;5835:59;5957:4;-1:-1:-1;;;;;5909:53:6;-1:-1:-1;;;;;;;;;;5909:34:6;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5909:53:6;;5905:92;;5971:26;;-1:-1:-1;;;5971:26:6;;;;;;;;;;;5905:92;6012:17;;;;;:64;;-1:-1:-1;6034:42:6;;-1:-1:-1;;;6034:42:6;;;;;1386:25:7;;;-1:-1:-1;;;;;4715:42:2;6034:28:6;;1359:18:7;;6034:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6033:43;6012:64;6008:104;;;6085:27;;-1:-1:-1;;;6085:27:6;;;;;;;;;;;6008:104;6123:12;6138:35;6152:7;6161:1;6164:8;;6138:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6138:13:6;;-1:-1:-1;;;6138:35:6:i;:::-;6123:50;;6183:14;-1:-1:-1;;;;;;;;;;6200:34:6;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6183:53;;6251:7;6247:183;;;6305:12;6297:6;6279:49;6319:8;;6279:49;;;;;;;:::i;:::-;;;;;;;;6247:183;;;6396:12;6388:6;6364:55;6410:8;;6364:55;;;;;;;:::i;:::-;;;;;;;;6247:183;5825:611;;5727:709;;;;:::o;2285:213:3:-;2374:13;2410:81;2426:7;2441:9;2460:6;2479:9;2410:4;:81::i;:::-;2399:92;2285:213;-1:-1:-1;;;;2285:213:3:o;1496:555::-;1653:13;2006:1;1973;1932:9;1926:16;1892:2;1881:9;1877:18;1834:6;1792:7;1759:4;1733:302;1705:330;1496:555;-1:-1:-1;;;;;1496:555:3:o;14:131:7:-;-1:-1:-1;;;;;89:31:7;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:347::-;201:8;211:6;265:3;258:4;250:6;246:17;242:27;232:55;;283:1;280;273:12;232:55;-1:-1:-1;306:20:7;;349:18;338:30;;335:50;;;381:1;378;371:12;335:50;418:4;410:6;406:17;394:29;;470:3;463:4;454:6;446;442:19;438:30;435:39;432:59;;;487:1;484;477:12;432:59;150:347;;;;;:::o;502:733::-;599:6;607;615;623;631;684:3;672:9;663:7;659:23;655:33;652:53;;;701:1;698;691:12;652:53;737:9;724:23;714:33;;797:2;786:9;782:18;769:32;810:31;835:5;810:31;:::i;:::-;860:5;-1:-1:-1;938:2:7;923:18;;910:32;;-1:-1:-1;1019:2:7;1004:18;;991:32;1046:18;1035:30;;1032:50;;;1078:1;1075;1068:12;1032:50;1117:58;1167:7;1158:6;1147:9;1143:22;1117:58;:::i;:::-;502:733;;;;-1:-1:-1;502:733:7;;-1:-1:-1;1194:8:7;;1091:84;502:733;-1:-1:-1;;;502:733:7:o;1422:664::-;1510:6;1518;1526;1534;1587:2;1575:9;1566:7;1562:23;1558:32;1555:52;;;1603:1;1600;1593:12;1555:52;1642:9;1629:23;1661:31;1686:5;1661:31;:::i;:::-;1711:5;-1:-1:-1;1789:2:7;1774:18;;1761:32;;-1:-1:-1;1870:2:7;1855:18;;1842:32;1897:18;1886:30;;1883:50;;;1929:1;1926;1919:12;1883:50;1968:58;2018:7;2009:6;1998:9;1994:22;1968:58;:::i;:::-;1422:664;;;;-1:-1:-1;2045:8:7;-1:-1:-1;;;;1422:664:7:o;2091:266::-;2179:6;2174:3;2167:19;2231:6;2224:5;2217:4;2212:3;2208:14;2195:43;-1:-1:-1;2283:1:7;2258:16;;;2276:4;2254:27;;;2247:38;;;;2339:2;2318:15;;;-1:-1:-1;;2314:29:7;2305:39;;;2301:50;;2091:266::o;2362:412::-;2604:1;2600;2595:3;2591:11;2587:19;2579:6;2575:32;2564:9;2557:51;2644:6;2639:2;2628:9;2624:18;2617:34;2687:2;2682;2671:9;2667:18;2660:30;2538:4;2707:61;2764:2;2753:9;2749:18;2741:6;2733;2707:61;:::i;:::-;2699:69;2362:412;-1:-1:-1;;;;;;2362:412:7:o;2779:696::-;2982:6;2971:9;2964:25;3054:1;3050;3045:3;3041:11;3037:19;3029:6;3025:32;3020:2;3009:9;3005:18;2998:60;3094:2;3089;3078:9;3074:18;3067:30;2945:4;3126:6;3120:13;3169:6;3164:2;3153:9;3149:18;3142:34;3194:1;3204:141;3218:6;3215:1;3212:13;3204:141;;;3330:2;3314:14;;;3310:23;;3304:30;3298:3;3279:17;;;3275:27;3268:67;3233:10;3204:141;;;3208:3;3395:1;3389:3;3380:6;3369:9;3365:22;3361:32;3354:43;3465:3;3458:2;3454:7;3449:2;3441:6;3437:15;3433:29;3422:9;3418:45;3414:55;3406:63;;;2779:696;;;;;;:::o;3480:184::-;3550:6;3603:2;3591:9;3582:7;3578:23;3574:32;3571:52;;;3619:1;3616;3609:12;3571:52;-1:-1:-1;3642:16:7;;3480:184;-1:-1:-1;3480:184:7:o;3669:244::-;3826:2;3815:9;3808:21;3789:4;3846:61;3903:2;3892:9;3888:18;3880:6;3872;3846:61;:::i;3918:251::-;3988:6;4041:2;4029:9;4020:7;4016:23;4012:32;4009:52;;;4057:1;4054;4047:12;4009:52;4089:9;4083:16;4108:31;4133:5;4108:31;:::i;:::-;4158:5;3918:251;-1:-1:-1;;;3918:251:7:o;4174:277::-;4241:6;4294:2;4282:9;4273:7;4269:23;4265:32;4262:52;;;4310:1;4307;4300:12;4262:52;4342:9;4336:16;4395:5;4388:13;4381:21;4374:5;4371:32;4361:60;;4417:1;4414;4407:12","linkReferences":{}},"methodIdentifiers":{"relayBatchEntry(address,bytes32,bytes)":"d06b4503","sendBatchEntry(uint256,address,bytes32,bytes)":"7cf59e25"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BatchDependencyNotRelayed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCrossDomainSender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageDestinationSameChain\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageTargetCrossChainBatcher\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageTargetCrossL2Inbox\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MessageTargetL2ToL2CrossDomainMessenger\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"source\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"prevMsgHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"FailedRelayedBatchEntry\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"source\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"prevMsgHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"RelayedBatchEntry\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destination\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"prevMsgHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"SentBatchEntry\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_prevMsgHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"relayBatchEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_prevMsgHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"sendBatchEntry\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash_\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FailedRelayedBatchEntry(uint256,bytes32,bytes)\":{\"params\":{\"message\":\"Message payload to call target with.\",\"prevMsgHash\":\"Message hash of the previous message in the batch that the                     current batch entry depends on. Can be zero to indicate the first entry in the batch.\",\"source\":\"Chain ID of the source chain\"}},\"RelayedBatchEntry(uint256,bytes32,bytes)\":{\"params\":{\"message\":\"Message payload to call target with.\",\"prevMsgHash\":\"Message hash of the previous message in the batch that the                     current batch entry depends on. Can be zero to indicate the first entry in the batch.\",\"source\":\"Chain ID of the source chain\"}},\"SentBatchEntry(uint256,address,bytes32,bytes)\":{\"params\":{\"destination\":\"Chain ID of the destination chain\",\"message\":\"Message payload to call target with.\",\"prevMsgHash\":\"Message hash of the previous message in the batch that the                     current batch entry depends on. Can be zero to indicate the first entry in the batch.\",\"target\":\"Target contract or wallet address.\"}}},\"kind\":\"dev\",\"methods\":{\"relayBatchEntry(address,bytes32,bytes)\":{\"params\":{\"_message\":\"Message to trigger the target address with.\",\"_prevMsgHash\":\"Message hash of the previous message in the batch that the                     current batch entry depends on. Can be zero to indicate the first entry in the batch.\",\"_target\":\"Target contract or wallet address.\"}},\"sendBatchEntry(uint256,address,bytes32,bytes)\":{\"params\":{\"_chainId\":\"Chain ID of the destination chain.\",\"_message\":\"Message to trigger the target address with.\",\"_prevMsgHash\":\"Message hash of the previous message in the batch that the                     current batch entry depends on. Can be zero to indicate the first entry in the batch.\",\"_target\":\"Target contract or wallet address.\"},\"returns\":{\"msgHash_\":\"   The hash of the message being sent, which can be used for tracking whether                     the message has successfully been relayed.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"BatchDependencyNotRelayed()\":[{\"notice\":\"Thrown when attemptring to relay a batch message with a not yet relayed batch dependency.\"}],\"InvalidCrossDomainSender()\":[{\"notice\":\"Thrown when attempting to relay a message and the cross domain message sender is not the OPCrossChainBatcher.\"}],\"MessageDestinationSameChain()\":[{\"notice\":\"Thrown when attempting to send a message to the chain that the message is being sent from.\"}],\"MessageTargetCrossChainBatcher()\":[{\"notice\":\"Thrown when attempting to relay a message whose target is OPCrossChainBatcher.\"}],\"MessageTargetCrossL2Inbox()\":[{\"notice\":\"Thrown when attempting to relay a message whose target is CrossL2Inbox.\"}],\"MessageTargetL2ToL2CrossDomainMessenger()\":[{\"notice\":\"Thrown when attempting to relay a message whose target is L2ToL2CrossDomainMessenger.\"}],\"Unauthorized()\":[{\"notice\":\"Error for an unauthorized CALLER.\"}]},\"events\":{\"FailedRelayedBatchEntry(uint256,bytes32,bytes)\":{\"notice\":\"Emitted whenever a batch entry fails to be relayed on this chain.\"},\"RelayedBatchEntry(uint256,bytes32,bytes)\":{\"notice\":\"Emitted whenever a batch entry is successfully relayed on this chain.\"},\"SentBatchEntry(uint256,address,bytes32,bytes)\":{\"notice\":\"Emitted whenever a batch entry is sent.\"}},\"kind\":\"user\",\"methods\":{\"relayBatchEntry(address,bytes32,bytes)\":{\"notice\":\"Relays the message that was sent by other OPCrossChainBatcher. Can be successful only after a message with the given hash was successfully relayed before.\"},\"sendBatchEntry(uint256,address,bytes32,bytes)\":{\"notice\":\"Sends a message to some target address on a destination chain. The message can be executed on the executing chain only after a message with the given hash was successfully relayed.\"}},\"notice\":\"CrossChainBatcher is a helper contract that works on top of Optimism interoperability protocol to allow batching several executing messages by specifying message dependency for each executing message. The batched messages are guaranteed to be executed in the correct sequence. CrossChainBatcher can be used to trustlessly pay the relayer for executing cross-chain messages.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/OPCrossChainBatcher.sol\":\"OPCrossChainBatcher\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":automate/=lib/optimism/packages/contracts-bedrock/lib/automate/contracts/\",\":ds-test/=lib/optimism/packages/contracts-bedrock/lib/solady/lib/ds-test/src/\",\":erc4626-tests/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/\",\":lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v5/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/\",\":openzeppelin-contracts/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts/\",\":optimism/=lib/optimism/\",\":prb-test/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/prb-test/src/\",\":safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/\",\":solady/=lib/optimism/packages/contracts-bedrock/lib/solady/\",\":solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/\"]},\"sources\":{\"lib/optimism/packages/contracts-bedrock/src/L2/interfaces/IL2ToL2CrossDomainMessenger.sol\":{\"keccak256\":\"0x202cf1a09e0bfc4be3828e3082115528d920b3d9481507eebc7dc3eea08e3f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd6cd76560932c521be04a0f1719c707efdeccb790854a0d96aa802eab7ac9e4\",\"dweb:/ipfs/QmduLYLHPW8421vhrsDQoLhrvyQQPT2zBZeUdWWk59f9PM\"]},\"lib/optimism/packages/contracts-bedrock/src/libraries/Predeploys.sol\":{\"keccak256\":\"0xf9256d38db06c7a486f3d9d18eb3d1654e3c130e7f935df063dabe5975db0f1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0283ac61da239064e4b5b0d3f73539178341ae96ab98b9cde4f9e5af9f6e27f\",\"dweb:/ipfs/QmaQmfnmWhzmhwbcXMeoXeyND2FAfuaFfoc3Ry3b34uveM\"]},\"lib/optimism/packages/contracts-bedrock/src/libraries/SafeCall.sol\":{\"keccak256\":\"0x180b41274f6ac4ce2df10ced19808511b205e7f6d5d179bc312b607a04b136a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef4727c043897c028fb22f9559fd8d223ec77a9c11b87df8e79251a1f3be7753\",\"dweb:/ipfs/Qmec1j5UPmwehpMJydnSyXPDwcAsSmGKPfFTZf4Qf5QPjc\"]},\"lib/optimism/packages/contracts-bedrock/src/libraries/errors/CommonErrors.sol\":{\"keccak256\":\"0x65823084264314849c7cc644d27394b18f18e81dced33af2e74d810b07d9f8a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187dc6bb3de10ff0a56043923026cdf272c753d18f2f34892a216ba99ade9edb\",\"dweb:/ipfs/QmUbRYjgb8ZC4FMNnxpkD1jt7i5WS23JbNE7HkeXv7Yahw\"]},\"src/L2/interfaces/ICrossL2Inbox.sol\":{\"keccak256\":\"0x8c4eb2ecdec5a8f8a9613ad60ee7c32a57c46626c314dc25cc7698c548add4a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548273ceac0c77aa6894f9408ff0a9ea8276cc2e932a97a95e3040587f9f43ae\",\"dweb:/ipfs/QmYjEpkKQy6K5jTDjXLMMDrfSfeQeVvFJpmP7hAP4arESR\"]},\"src/OPCrossChainBatcher.sol\":{\"keccak256\":\"0x35044126789073e9bf30926276c195e3b87fea13cc369124df9da2e25a3a2c34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://159c1928ca8588b70b0a87016868501532dac2c46e884cb4d85306ec00826073\",\"dweb:/ipfs/QmRvTYfPzJLPTm1kNbAdrGmEMprA19StsUpgSymhYy1J8H\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"BatchDependencyNotRelayed"},{"inputs":[],"type":"error","name":"InvalidCrossDomainSender"},{"inputs":[],"type":"error","name":"MessageDestinationSameChain"},{"inputs":[],"type":"error","name":"MessageTargetCrossChainBatcher"},{"inputs":[],"type":"error","name":"MessageTargetCrossL2Inbox"},{"inputs":[],"type":"error","name":"MessageTargetL2ToL2CrossDomainMessenger"},{"inputs":[],"type":"error","name":"Unauthorized"},{"inputs":[{"internalType":"uint256","name":"source","type":"uint256","indexed":true},{"internalType":"bytes32","name":"prevMsgHash","type":"bytes32","indexed":true},{"internalType":"bytes","name":"message","type":"bytes","indexed":false}],"type":"event","name":"FailedRelayedBatchEntry","anonymous":false},{"inputs":[{"internalType":"uint256","name":"source","type":"uint256","indexed":true},{"internalType":"bytes32","name":"prevMsgHash","type":"bytes32","indexed":true},{"internalType":"bytes","name":"message","type":"bytes","indexed":false}],"type":"event","name":"RelayedBatchEntry","anonymous":false},{"inputs":[{"internalType":"uint256","name":"destination","type":"uint256","indexed":true},{"internalType":"address","name":"target","type":"address","indexed":true},{"internalType":"bytes32","name":"prevMsgHash","type":"bytes32","indexed":true},{"internalType":"bytes","name":"message","type":"bytes","indexed":false}],"type":"event","name":"SentBatchEntry","anonymous":false},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes32","name":"_prevMsgHash","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"relayBatchEntry"},{"inputs":[{"internalType":"uint256","name":"_chainId","type":"uint256"},{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes32","name":"_prevMsgHash","type":"bytes32"},{"internalType":"bytes","name":"_message","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"sendBatchEntry","outputs":[{"internalType":"bytes32","name":"msgHash_","type":"bytes32"}]}],"devdoc":{"kind":"dev","methods":{"relayBatchEntry(address,bytes32,bytes)":{"params":{"_message":"Message to trigger the target address with.","_prevMsgHash":"Message hash of the previous message in the batch that the                     current batch entry depends on. Can be zero to indicate the first entry in the batch.","_target":"Target contract or wallet address."}},"sendBatchEntry(uint256,address,bytes32,bytes)":{"params":{"_chainId":"Chain ID of the destination chain.","_message":"Message to trigger the target address with.","_prevMsgHash":"Message hash of the previous message in the batch that the                     current batch entry depends on. Can be zero to indicate the first entry in the batch.","_target":"Target contract or wallet address."},"returns":{"msgHash_":"   The hash of the message being sent, which can be used for tracking whether                     the message has successfully been relayed."}}},"version":1},"userdoc":{"kind":"user","methods":{"relayBatchEntry(address,bytes32,bytes)":{"notice":"Relays the message that was sent by other OPCrossChainBatcher. Can be successful only after a message with the given hash was successfully relayed before."},"sendBatchEntry(uint256,address,bytes32,bytes)":{"notice":"Sends a message to some target address on a destination chain. The message can be executed on the executing chain only after a message with the given hash was successfully relayed."}},"version":1}},"settings":{"remappings":["automate/=lib/optimism/packages/contracts-bedrock/lib/automate/contracts/","ds-test/=lib/optimism/packages/contracts-bedrock/lib/solady/lib/ds-test/src/","erc4626-tests/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","kontrol-cheatcodes/=lib/optimism/packages/contracts-bedrock/lib/kontrol-cheatcodes/src/","lib-keccak/=lib/optimism/packages/contracts-bedrock/lib/lib-keccak/contracts/","openzeppelin-contracts-upgradeable/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v5/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-v5/","openzeppelin-contracts/=lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts/","optimism/=lib/optimism/","prb-test/=lib/optimism/packages/contracts-bedrock/lib/automate/lib/prb-test/src/","safe-contracts/=lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/","solady/=lib/optimism/packages/contracts-bedrock/lib/solady/","solmate/=lib/optimism/packages/contracts-bedrock/lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/OPCrossChainBatcher.sol":"OPCrossChainBatcher"},"evmVersion":"paris","libraries":{}},"sources":{"lib/optimism/packages/contracts-bedrock/src/L2/interfaces/IL2ToL2CrossDomainMessenger.sol":{"keccak256":"0x202cf1a09e0bfc4be3828e3082115528d920b3d9481507eebc7dc3eea08e3f36","urls":["bzz-raw://fd6cd76560932c521be04a0f1719c707efdeccb790854a0d96aa802eab7ac9e4","dweb:/ipfs/QmduLYLHPW8421vhrsDQoLhrvyQQPT2zBZeUdWWk59f9PM"],"license":"MIT"},"lib/optimism/packages/contracts-bedrock/src/libraries/Predeploys.sol":{"keccak256":"0xf9256d38db06c7a486f3d9d18eb3d1654e3c130e7f935df063dabe5975db0f1b","urls":["bzz-raw://b0283ac61da239064e4b5b0d3f73539178341ae96ab98b9cde4f9e5af9f6e27f","dweb:/ipfs/QmaQmfnmWhzmhwbcXMeoXeyND2FAfuaFfoc3Ry3b34uveM"],"license":"MIT"},"lib/optimism/packages/contracts-bedrock/src/libraries/SafeCall.sol":{"keccak256":"0x180b41274f6ac4ce2df10ced19808511b205e7f6d5d179bc312b607a04b136a3","urls":["bzz-raw://ef4727c043897c028fb22f9559fd8d223ec77a9c11b87df8e79251a1f3be7753","dweb:/ipfs/Qmec1j5UPmwehpMJydnSyXPDwcAsSmGKPfFTZf4Qf5QPjc"],"license":"MIT"},"lib/optimism/packages/contracts-bedrock/src/libraries/errors/CommonErrors.sol":{"keccak256":"0x65823084264314849c7cc644d27394b18f18e81dced33af2e74d810b07d9f8a2","urls":["bzz-raw://187dc6bb3de10ff0a56043923026cdf272c753d18f2f34892a216ba99ade9edb","dweb:/ipfs/QmUbRYjgb8ZC4FMNnxpkD1jt7i5WS23JbNE7HkeXv7Yahw"],"license":"MIT"},"src/L2/interfaces/ICrossL2Inbox.sol":{"keccak256":"0x8c4eb2ecdec5a8f8a9613ad60ee7c32a57c46626c314dc25cc7698c548add4a8","urls":["bzz-raw://548273ceac0c77aa6894f9408ff0a9ea8276cc2e932a97a95e3040587f9f43ae","dweb:/ipfs/QmYjEpkKQy6K5jTDjXLMMDrfSfeQeVvFJpmP7hAP4arESR"],"license":"MIT"},"src/OPCrossChainBatcher.sol":{"keccak256":"0x35044126789073e9bf30926276c195e3b87fea13cc369124df9da2e25a3a2c34","urls":["bzz-raw://159c1928ca8588b70b0a87016868501532dac2c46e884cb4d85306ec00826073","dweb:/ipfs/QmRvTYfPzJLPTm1kNbAdrGmEMprA19StsUpgSymhYy1J8H"],"license":"MIT"}},"version":1},"id":6}